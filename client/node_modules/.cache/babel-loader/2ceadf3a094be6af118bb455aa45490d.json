{"ast":null,"code":"var _jsxFileName = \"/Users/joyenettles/Documents/code/react/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport './cart-dropdown.styles.scss';\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  toggleCartHidden\n}) => React.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"cart-items\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, cartItems.length ? cartItems.map(cartItem => React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})) : React.createElement(\"span\", {\n  className: \"empty-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"Your cart is empty\")), React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    toggleCartHidden();\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"GO TO CHECKOUT\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/joyenettles/Documents/code/react/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","withRouter","connect","CustomButton","CartItem","selectCartItems","createStructuredSelector","toggleCartHidden","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAAQC,eAAR,QAA8B,iCAA9B;AAEA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAO,6BAAP;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBH,EAAAA;AAArB,CAAD,KACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQE,SAAS,CAACE,MAAV,GACIF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAClB,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,GAIA;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANR,CADJ,EAUI,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AACzBH,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACAR,IAAAA,gBAAgB;AACnB,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,CADJ;;AAkBA,MAAMS,eAAe,GAAGV,wBAAwB,CAAC;AAACG,EAAAA,SAAS,EAAEJ;AAAZ,CAAD,CAAhD;;AAEA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCX,EAAAA,gBAAgB,EAAE,MAAMW,QAAQ,CAACX,gBAAgB,EAAjB;AADI,CAAL,CAAnC;;AAIA,eAAeN,UAAU,CAACC,OAAO,CAACc,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,YAA7C,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from 'react-redux';\n\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport {selectCartItems} from \"../../redux/cart/cart.selectors\";\n\nimport {createStructuredSelector} from \"reselect\";\n\nimport './cart-dropdown.styles.scss';\nimport {toggleCartHidden} from \"../../redux/cart/cart.actions\";\n\nconst CartDropdown = ({cartItems, history, toggleCartHidden}) => (\n    <div className='cart-dropdown'>\n        <div className='cart-items'>\n            {\n                cartItems.length ?\n                    cartItems.map(cartItem => (\n                        <CartItem key={cartItem.id} item={cartItem}/>\n                    )) :\n                <span className='empty-message'>Your cart is empty</span>\n            }\n        </div>\n        <CustomButton onClick={() => {\n            history.push('/checkout');\n            toggleCartHidden();\n        }}>GO TO CHECKOUT</CustomButton>\n    </div>\n);\n\nconst mapStateToProps = createStructuredSelector({cartItems: selectCartItems});\n\nconst mapDispatchToProps = dispatch => ({\n    toggleCartHidden: () => dispatch(toggleCartHidden())\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}