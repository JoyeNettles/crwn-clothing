{"ast":null,"code":"var _jsxFileName = \"/Users/joyenettles/Documents/code/react/crwn-clothing/src/App.js\";\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { auth, createUserProfileDocument } from './firebase/firebase.util';\nimport { selectCurrentUser } from \"./redux/user/user.selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport './App.css';\nimport { setCurrentUser } from './redux/user/user.action';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop-page/shop-page.component';\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nexport class App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUserInState\n    } = this.props; // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //     if (userAuth) {\n    //         const userRef = await createUserProfileDocument(userAuth);\n    //         userRef.onSnapshot(snapshot => {\n    //             setCurrentUserInState({\n    //                 id: snapshot.id,\n    //                 ...snapshot.data()\n    //             });\n    //         })\n    //     }\n    //\n    //     setCurrentUserInState(userAuth);\n    // })\n  }\n\n  componentWillUnmount() {// this.unsubscribeFromAuth();\n  }\n\n  render() {\n    const {\n      currentUser\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signIn\",\n      render: () => currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUserInState: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/joyenettles/Documents/code/react/crwn-clothing/src/App.js"],"names":["React","Redirect","Route","Switch","connect","auth","createUserProfileDocument","selectCurrentUser","createStructuredSelector","setCurrentUser","Header","HomePage","ShopPage","CheckoutPage","SignInAndSignUpPage","App","Component","unsubscribeFromAuth","componentDidMount","setCurrentUserInState","props","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,EAAyBC,MAAzB,QAAsC,kBAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,0BAA9C;AACA,SAAQC,iBAAR,QAAgC,4BAAhC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AAEA,OAAO,WAAP;AACA,SAAQC,cAAR,QAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AAEA,OAAO,MAAMC,GAAN,SAAkBf,KAAK,CAACgB,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAErCC,mBAFqC,GAEf,IAFe;AAAA;;AAIrCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA;AAAD,QAA0B,KAAKC,KAArC,CADgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDC,EAAAA,oBAAoB,GAAG,CACnB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKH,KAA3B;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAET,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AACO,MAAA,IAAI,EAAC,SADZ;AAEO,MAAA,MAAM,EAAE,MACJU,WAAW,GAAI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAJ,GAA2B,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAFJ,CADJ;AAeH;;AA3CoC;AA8CzC,MAAMC,eAAe,GAAGhB,wBAAwB,CAAC;AAC7Ce,EAAAA,WAAW,EAAEhB;AADgC,CAAD,CAAhD;;AAIA,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCP,EAAAA,qBAAqB,EAAEQ,IAAI,IAAID,QAAQ,CAACjB,cAAc,CAACkB,IAAD,CAAf;AADH,CAAL,CAAnC;;AAIA,eAAevB,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport {auth, createUserProfileDocument} from './firebase/firebase.util';\nimport {selectCurrentUser} from \"./redux/user/user.selector\";\nimport {createStructuredSelector} from \"reselect\";\n\nimport './App.css';\nimport {setCurrentUser} from './redux/user/user.action';\nimport Header from './components/header/header.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop-page/shop-page.component';\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\n\nexport class App extends React.Component {\n\n    unsubscribeFromAuth = null;\n\n    componentDidMount() {\n        const {setCurrentUserInState} = this.props;\n\n        // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n        //     if (userAuth) {\n        //         const userRef = await createUserProfileDocument(userAuth);\n        //         userRef.onSnapshot(snapshot => {\n        //             setCurrentUserInState({\n        //                 id: snapshot.id,\n        //                 ...snapshot.data()\n        //             });\n        //         })\n        //     }\n        //\n        //     setCurrentUserInState(userAuth);\n        // })\n    }\n\n    componentWillUnmount() {\n        // this.unsubscribeFromAuth();\n    }\n\n    render() {\n        const {currentUser} = this.props;\n        return (\n            <div>\n                <Header/>\n                <Switch>\n                    <Route exact path='/' component={HomePage}/>\n                    <Route path='/shop' component={ShopPage}/>\n                    <Route exact path='/checkout' component={CheckoutPage}/>\n                    <Route exact\n                           path='/signIn'\n                           render={() =>\n                               currentUser ? (<Redirect to='/'/>) : (<SignInAndSignUpPage/>)}/>\n\n                </Switch>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = createStructuredSelector({\n    currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setCurrentUserInState: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}