{"ast":null,"code":"export const addItemToCart = (cartItems, newItem) => {\n  const existingCartItem = cartItems.find(item => item.id === newItem.id);\n\n  if (existingCartItem) {\n    return cartItems.map(item => item.id === newItem.id ? { ...item,\n      quantity: item.quantity + 1\n    } : item);\n  }\n\n  return [...cartItems, { ...newItem,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  const existingCartItem = cartItems.find(item => item.id === itemToRemove.id);\n\n  if (existingCartItem) {\n    return cartItems.map(item => item.id === itemToRemove.id ? item.quantity > 1 ? { ...item,\n      quantity: item.quantity - 1\n    } : {} : item);\n  }\n\n  return [...cartItems];\n};","map":{"version":3,"sources":["/Users/joyenettles/Documents/code/react/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","newItem","existingCartItem","find","item","id","map","quantity","removeItemFromCart","itemToRemove"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACjD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAA3C,CAAzB;;AAEA,MAAIH,gBAAJ,EAAsB;AAClB,WAAOF,SAAS,CAACM,GAAV,CAAcF,IAAI,IACrBA,IAAI,CAACC,EAAL,KAAYJ,OAAO,CAACI,EAApB,GAAyB,EAAC,GAAGD,IAAJ;AAAUG,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAApC,KAAzB,GAAkEH,IAD/D,CAAP;AAGH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,OAAJ;AAAaM,IAAAA,QAAQ,EAAE;AAAvB,GAAf,CAAP;AACH,CAVM;AAYP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,YAAZ,KAA6B;AAC3D,QAAMP,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYI,YAAY,CAACJ,EAAhD,CAAzB;;AAEA,MAAGH,gBAAH,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAcF,IAAI,IACrBA,IAAI,CAACC,EAAL,KAAYI,YAAY,CAACJ,EAAzB,GACKD,IAAI,CAACG,QAAL,GAAgB,CAAhB,GAAoB,EAAC,GAAGH,IAAJ;AAAUG,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAApC,KAApB,GAA6D,EADlE,GAEOH,IAHJ,CAAP;AAKH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,CAAP;AACH,CAZM","sourcesContent":["export const addItemToCart = (cartItems, newItem) => {\n    const existingCartItem = cartItems.find(item => item.id === newItem.id);\n\n    if (existingCartItem) {\n        return cartItems.map(item =>\n            item.id === newItem.id ? {...item, quantity: item.quantity + 1} : item\n        );\n    }\n\n    return [...cartItems, {...newItem, quantity: 1}];\n};\n\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n    const existingCartItem = cartItems.find(item => item.id === itemToRemove.id);\n\n    if(existingCartItem) {\n        return cartItems.map(item =>\n            item.id === itemToRemove.id ?\n                (item.quantity > 1 ? {...item, quantity: item.quantity - 1} : {})\n                 : item\n        );\n    }\n\n    return [...cartItems];\n};\n"]},"metadata":{},"sourceType":"module"}