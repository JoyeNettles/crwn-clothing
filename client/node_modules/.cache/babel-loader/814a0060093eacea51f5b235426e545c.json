{"ast":null,"code":"var _jsxFileName = \"/Users/joyenettles/Documents/code/react/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport './sign-up.styles.scss';\nimport { signUpStart } from \"../../redux/user/user.action\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: signUpCredentials => dispatch(signUpStart(signUpCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/joyenettles/Documents/code/react/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","signUpCredentials"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {connect} from 'react-redux';\n\nimport './sign-up.styles.scss';\nimport {signUpStart} from \"../../redux/user/user.action\";\n\nconst SignUp = ({signUpStart}) => {\n    const [userCredentials, setCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    });\n\n    const {displayName, email, password, confirmPassword} = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n\n        if (password !== confirmPassword) {\n            alert(\"passwords don't match\");\n            return;\n        }\n\n        signUpStart({displayName, email, password});\n    };\n\n    const handleChange = event => {\n        const {name, value} = event.target;\n        setCredentials({...userCredentials, [name]: value})\n    };\n\n    return (\n        <div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                    type='text'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    label='Display Name'\n                />\n                <FormInput\n                    type='email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    label='Email'\n                />\n                <FormInput\n                    type='password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    label='Password'\n                />\n                <FormInput\n                    type='password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    label='Confirm Password'\n                />\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: signUpCredentials => dispatch(signUpStart(signUpCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}