{"ast":null,"code":"var _jsxFileName = \"/Users/joyenettles/Documents/code/react/crwn-clothing/src/pages/shop-page/shop-page.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.util\";\nimport { connect } from 'react-redux';\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromCollectionsSnapshot = null;\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromCollectionsSnapshot = collectionRef.onSnapshot(async collectionSnapshot => {\n      const collections = convertCollectionsSnapshotToMap(collectionSnapshot);\n      updateCollections(collections);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromCollectionsSnapshot();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      isLoading\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/joyenettles/Documents/code/react/crwn-clothing/src/pages/shop-page/shop-page.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","convertCollectionsSnapshotToMap","firestore","connect","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","unsubscribeFromCollectionsSnapshot","state","isLoading","componentDidMount","props","collectionRef","collection","onSnapshot","collectionSnapshot","collections","setState","componentWillUnmount","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,8BAAzD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACN,mBAAD,CAAlD;AACA,MAAMQ,0BAA0B,GAAGF,WAAW,CAACL,cAAD,CAA9C;;AAEA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,kCAFmC,GAEE,IAFF;AAAA,SAInCC,KAJmC,GAI3B;AACJC,MAAAA,SAAS,EAAE;AADP,KAJ2B;AAAA;;AAQnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACT,MAAAA;AAAD,QAAsB,KAAKU,KAAjC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKN,kCAAL,GAA0CK,aAAa,CAACE,UAAd,CAAyB,MAAMC,kBAAN,IAA4B;AAC3F,YAAMC,WAAW,GAAGlB,+BAA+B,CAACiB,kBAAD,CAAnD;AACAd,MAAAA,iBAAiB,CAACe,WAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACH,KAJyC,CAA1C;AAKH;;AAEDS,EAAAA,oBAAoB,GAAG;AACnB,SAAKX,kCAAL;AACH;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKT,KAArB;AACA,UAAM;AAACF,MAAAA;AAAD,QAAc,KAAKD,KAAzB;AACA,WAAQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGV,KAAD,IAAY,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEF;AAA3C,SAA0DE,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,EAEJ,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGV,KAAD,IAAY,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEF;AAAvC,SAAsDE,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CAAR;AAIH;;AA9BkC;;AAiCvC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACpCtB,EAAAA,iBAAiB,EAAEuB,cAAc,IAAID,QAAQ,CAACtB,iBAAiB,CAACuB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.util\";\nimport {connect} from 'react-redux';\nimport {updateCollections} from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n    unsubscribeFromCollectionsSnapshot = null;\n\n    state = {\n        isLoading: false\n    };\n\n    componentDidMount() {\n        const {updateCollections} = this.props;\n        const collectionRef = firestore.collection('collections');\n\n        this.unsubscribeFromCollectionsSnapshot = collectionRef.onSnapshot(async collectionSnapshot => {\n            const collections = convertCollectionsSnapshotToMap(collectionSnapshot);\n            updateCollections(collections);\n            this.setState({isLoading: false});\n        });\n    }\n\n    componentWillUnmount() {\n        this.unsubscribeFromCollectionsSnapshot();\n    }\n\n    render() {\n        const {match} = this.props;\n        const {isLoading} = this.state;\n        return (<div className='shop-page'>\n            <Route exact path={`${match.path}`} render={(props) => (<CollectionsOverviewWithSpinner isLoading={isLoading} {...props}/>)} />\n            <Route path={`${match.path}/:collectionId`} render={(props) => (<CollectionsPageWithSpinner isLoading={isLoading} {...props}/>)} />\n        </div>);\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}