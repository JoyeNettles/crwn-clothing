{"ast":null,"code":"var _jsxFileName = \"/Users/joyenettles/Documents/code/react/crwn-clothing/src/pages/shop-page/shop-page.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.util\";\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from \"reselect\";\nimport { fetchCollectionsStartAsync, updateCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromCollectionsSnapshot = null;\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapSelectToProps = createStructuredSelector({\n  isFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapSelectToProps)(ShopPage);","map":{"version":3,"sources":["/Users/joyenettles/Documents/code/react/crwn-clothing/src/pages/shop-page/shop-page.component.jsx"],"names":["React","Route","CollectionsOverview","CollectionPage","convertCollectionsSnapshotToMap","firestore","connect","createStructuredSelector","fetchCollectionsStartAsync","updateCollections","WithSpinner","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","unsubscribeFromCollectionsSnapshot","state","isLoading","componentDidMount","render","match","props","path","mapSelectToProps","isFetching","mapDispatchToProps","dispatch","fetchCollectionStartAsync"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,8BAAzD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,0BAAR,EAAoCC,iBAApC,QAA4D,+BAA5D;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAAQC,0BAAR,QAAyC,iCAAzC;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACR,mBAAD,CAAlD;AACA,MAAMW,yBAAyB,GAAGH,WAAW,CAACP,cAAD,CAA7C;;AAEA,MAAMW,QAAN,SAAuBd,KAAK,CAACe,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,kCAFmC,GAEE,IAFF;AAAA,SAInCC,KAJmC,GAI3B;AACJC,MAAAA,SAAS,EAAE;AADP,KAJ2B;AAAA;;AAQnCC,EAAAA,iBAAiB,GAAG;AAChBX,IAAAA,0BAA0B;AAC7B;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKC,KAArB;AACA,WAAQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AACO,MAAA,MAAM,EAAED,KAAK,IAAK,oBAAC,8BAAD,oBAAoCA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,EAGJ,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBAA3B;AACO,MAAA,MAAM,EAAED,KAAK,IAAK,oBAAC,yBAAD,oBAA+BA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHI,CAAR;AAMH;;AApBkC;;AAuBvC,MAAME,gBAAgB,GAAGjB,wBAAwB,CAAC;AAC9CkB,EAAAA,UAAU,EAAEd;AADkC,CAAD,CAAjD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,yBAAyB,EAAE,MAAMD,QAAQ,CAACnB,0BAA0B,EAA3B;AADL,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAACkB,gBAAD,CAAP,CAA0BV,QAA1B,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.util\";\nimport {connect} from 'react-redux';\nimport {createStructuredSelector} from \"reselect\";\nimport {fetchCollectionsStartAsync, updateCollections} from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport {selectIsCollectionFetching} from \"../../redux/shop/shop.selectors\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n    unsubscribeFromCollectionsSnapshot = null;\n\n    state = {\n        isLoading: false\n    };\n\n    componentDidMount() {\n        fetchCollectionsStartAsync()\n    }\n\n    render() {\n        const {match} = this.props;\n        return (<div className='shop-page'>\n            <Route exact path={`${match.path}`}\n                   render={props => (<CollectionsOverviewWithSpinner {...props}/>)}/>\n            <Route path={`${match.path}/:collectionId`}\n                   render={props => (<CollectionPageWithSpinner {...props}/>)}/>\n        </div>);\n    }\n}\n\nconst mapSelectToProps = createStructuredSelector({\n    isFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapSelectToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}